4)grep
- matching
- 대소문자 구분함
- 라인 전체를 출력한다
Q. The가 있는 txt파일을 전체 조회하라.
A) grep The *.txt
- -v : 조건 문자열이 없는 라인 출력 

Q. /usr/lib에 포함된 하위 디렉터리 개수 알아내기
A) ls -l /usr/lib | cut -c1 | grep d | wc -l

5) sort 
- 정렬, 오름차순(abcd...)
- r (reversed)
- 숫자 정렬(-n)
  sort -n -r sample.txt
  sort -nr sample.txt
Q. animals.txt 3번째 필드가 숫자 => 오름차순 정렬해서 출력하자
A) cut -f3 animals.txt | sort -n
Q2. 최소값, 최대값 출력하기
A) cut -f3 animals.txt | sort -n | head -n1
   cut -f3 animals.txt | sort -nr | head -n1
Q3. /etc/passwd 디렉터리에서 사용자 이름 정렬하여 추출하기
A) head /etc/passwd | cut -d: -f1 | sort
- 전체 출력하기: cut -d: -f1 /etc/passwd | sort
Q4. 사용자 중 root가 있는지 확인하기( 존재하는 라인만 출력 )
A) head /etc/passwd | cut -d: -f1 | grep root

  |grep root
  - Root, root, RooT
  - root 'abcdroot'
  - _root_ => -w
Q5. ls , head

- ls : 파일이나 디렉터리 목록
- head : 파일 내용 조회
# letters 내용 조회하기
6) uniq
- 중복된 문자열을 제거해서 보여주되, 인접한 중복 문자열만 

Q. 성적표( grades 파일 )에서 가장 빈번하지 않은 등급부터 출력하기.
cut -f1 grades | sort -r | uniq

------------------
#1. 버전 관리
- 파일의 변화를 시간에 따라 지정했다가 나중에 특정 시점의 버전으로 다시 꺼내올 수 있는 시스템
- 협업
- 톨 : 깃 

#2. 깃
- 데이터 저장 방식: 스냅샷
- 오프라인
  - if 빈 -> 텍스트 입력
  - 키(key)-벨류(value)
    - 키는 고유하다
    - 벨류(텍스트)

깃 상태
  - 수정
  - 커밋: 저장
  - 스테이지: 스냅샷 찍어서 커밋할 준비가 된 상태

  - 수정
  - 스테이징 -> 커밋

- 깃 커밋 순서: 
  상태 체크 -> (수정) -> 스테이징 -> 커밋
  ....

1) 버전 체크
git --version
  * git -v --version
  ls -l
  ls --list(x)

2) 사용자 정보 설정하기
- name
- email
  - 옵션: --global: 전체 시스템에 영향을 준다.
    - 프로젝트마다 다른 이름을 사용하고 싶을 경우는 옵션을 제외함

  - core.editor
    - vi 빠져나올 때는 :q + enter

  - git help <프로그램명>
  # 디렉터리(directory)
  - 우리가 말하는 "폴더"
  - 트리구조를 가진
    animals/
      ㄴ name.txt
      ㄴ age.txt
      mammals/
        ㄴ cow.txt
      reptile/
        -

  - 하위 디렉터리(child) - animals > mammals
  - 상위 디렉터리(parent) - mammals > animals
  - 형제 디렉터리(sibling) - mammals, reptile

  - /로 구분함
    animals/mammals/cow.txt
    <디렉터리 / .... / 파일명>
    - / : 루트 디렉터리

  - 절대경로 : 루트에서부터 시작
  - 상대경로 : 현재 기준
    - 나의 현재 위치가 mammals이다. 근데 위로 가고싶다.
      1) 절대경로 : /...../mammals
      2) 상대경로: ..
    - cd : change directory

      예: cd ./mammals
        cd ..

- pwd, cd 
- .. .
- mkdir

3) 깃 초기화
  git init: .git에 모든 변경사항(스냅샷)이 저장이 된다.

4) 상태체크
  git status

  깃이 모르는 파일일 경우
  untracked -> 'add' -> tracked

  add -> commit



    - branch 정보 : main
    - f37df1e - 키 정보
    - init commit -메시지
    1 file changed, 7 insertions(+) : 변경사항

  - git status
  - git add <파일명>
  